https://leetcode.com/explore/challenge/card/30-day-leetcoding-challenge/529/week-2/3297/
Code:

class Solution {
public:
    int lastStoneWeight(vector<int>& stones) {
        int n=stones.size();
        priority_queue<int> pq;
        for(int i=0;i<n;i++) pq.push(stones[i]);
        while(pq.size()>1){
            int x=pq.top();
            pq.pop();
            int y=pq.top();
            pq.pop();
            if(x!=y)
                pq.push(abs(x-y));
        }
        if(pq.empty()) return 0;
        return pq.top();
    }
};
