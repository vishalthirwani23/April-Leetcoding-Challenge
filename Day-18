https://leetcode.com/explore/challenge/card/30-day-leetcoding-challenge/530/week-3/3303/
Code:

class Solution {
public:
    int minPathSum(vector<vector<int>>& grid) {
        int m=grid.size(),n=grid[0].size();
        vector<int> dp(n);
        dp[0]=grid[0][0];
        for(int i=1;i<n;i++)
            dp[i]=dp[i-1]+grid[0][i];
        for(int i=1;i<m;i++){
            vector<int> dp2(n);
            for(int j=0;j<n;j++){
                if(j==0) dp2[j]=dp[j]+grid[i][j];
                else
                    dp2[j]=min(dp2[j-1],dp[j])+grid[i][j];
            }
            dp=dp2;
        }
            return dp[n-1];
    }
};
